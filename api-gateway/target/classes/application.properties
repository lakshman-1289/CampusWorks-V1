# =========================
# Server Configuration
# =========================
server.port=8080

# =========================
# Spring Application
# =========================
spring.application.name=api-gateway

# =========================
# Spring Cloud Gateway
# =========================
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# =========================
# Gateway Routes (API Only - Clean & Secure)
# =========================
# Auth Service API Route
spring.cloud.gateway.routes[0].id=auth-service-api
spring.cloud.gateway.routes[0].uri=lb://auth-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

# Task Service API Route
spring.cloud.gateway.routes[1].id=task-service-api
spring.cloud.gateway.routes[1].uri=lb://task-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/tasks/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

# Bidding Service API Route
spring.cloud.gateway.routes[2].id=bidding-service-api
spring.cloud.gateway.routes[2].uri=lb://bidding-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/bids/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1

# Profile Service API Route
spring.cloud.gateway.routes[3].id=profile-service-api
spring.cloud.gateway.routes[3].uri=lb://profile-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/profiles/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=1

# Payment Service API Route
spring.cloud.gateway.routes[4].id=payment-service-api
spring.cloud.gateway.routes[4].uri=lb://payment-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/payments/**
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=1

# =========================
# CORS Configuration
# =========================
# CORS is centrally configured in SecurityConfig.java
# This is the ONLY place where CORS should be configured
# All other services have CORS disabled to prevent duplicate headers
# Frontend URL: http://localhost:3000
# Allowed Methods: GET, POST, PUT, DELETE, OPTIONS, PATCH
# Credentials: Enabled

# =========================
# Eureka Client
# =========================
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
eureka.client.healthcheck.enabled=true

# Lease + heartbeat tuning
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=30
eureka.client.initial-instance-info-replication-interval-seconds=30
eureka.client.registry-fetch-interval-seconds=15

# =========================
# Actuator (Health Check)
# =========================
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# =========================
# JWT Security
# =========================
security.jwt.secret=mysupersecuresecretkeythatismorethan32chars
security.jwt.expiration=86400000

# =========================
# Logging Configuration
# =========================
logging.level.com.campusworks.gateway=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG
